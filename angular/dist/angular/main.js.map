{"version":3,"sources":["./src/app/layout/header/header.component.html","./src/app/layout/header/header.component.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/core/authentication/auth-guard.service.ts","./src/app/register/services/register.service.ts","./src/app/core/authentication/auth.service.ts","./src/environments/environment.ts","./src/app/shared/backendModels/interfaces.ts","./src/app/form-login/components/login/login.component.ts","./src/app/form-login/components/login/login.component.html","./src/app/form-login/components/login/login-module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/config.ts","./src/app/view-queue/services/queue.service.ts","./src/app/app.module.ts","./src/app/form-login/form-login-module.ts","./src/app/shared/core.module.ts","./src/app/view-queue/view-queue.component.ts","./src/app/view-queue/view-queue.component.html","./src/app/view-queue/services/access-code.service.ts","./src/app/form-login/form-login.component.ts","./src/app/form-login/form-login.component.html","./src/app/app-routing.module.ts","./src/app/form-login/components/login/services/login.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["Jump The Queue\n<span flex></span>\n<button mat-icon-button mdTooltip=\"Log out\" (click)=onClickLogout() *ngIf=\"authService.isLogged()\">\n  <mat-icon>exit_to_app</mat-icon>\n</button>","import { Component, OnInit } from '@angular/core';\nimport { AuthGuardService } from 'src/app/core/authentication/auth-guard.service';\nimport { AuthService } from 'src/app/core/authentication/auth.service';\nimport { LoginService } from 'src/app/form-login/components/login/services/login.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public authService: AuthService, private loginService: LoginService) { }\n\n  ngOnInit(): void {\n  }\n\n  onClickLogout(): void {\n    this.loginService.logout();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RegisterService } from './services/register.service';\nimport { Visitor } from '../shared/backendModels/interfaces';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { LoginService } from '../form-login/components/login/services/login.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private registerService: RegisterService, private router: Router, public snackBar: MatSnackBar, private loginService: LoginService) { }\n\n  submitRegister(formValue: { username: string; name: string; phoneNumber: string; password: string; acceptedCommercial: boolean; acceptedTerms: boolean; }): void {\n    const visitor: Visitor = new Visitor();\n    visitor.username = formValue.username;\n    visitor.name = formValue.name;\n    visitor.phoneNumber = formValue.phoneNumber;\n    visitor.password = formValue.password;\n    visitor.acceptedCommercial = formValue.acceptedCommercial;\n    visitor.acceptedTerms = formValue.acceptedTerms;\n    visitor.userType = false;\n\n    this.registerService.registerVisitor(visitor).subscribe(\n      (visitorResult: Visitor) => {\n        this.loginService.login(visitorResult.username, visitorResult.password);\n      }, // When theres an error\n    );\n  }\n\n  ngOnInit() {\n  }\n}\n","<form layout-padding (ngSubmit)=\"submitRegister(registerForm.form.value)\" #registerForm=\"ngForm\">\n    <div layout=\"row\" flex>\n        <mat-form-field flex>\n          <input matInput placeholder=\"Email\" ngModel email name=\"username\" required>\n        </mat-form-field>\n    </div>\n    <div layout=\"row\" flex>\n        <mat-form-field flex>\n          <input matInput placeholder=\"Password\" ngModel name=\"password\" type=\"password\" required>\n        </mat-form-field>\n    </div>\n    <div layout=\"row\" flex>\n        <mat-form-field flex>\n          <input matInput placeholder=\"Name\" ngModel name=\"name\" required>\n        </mat-form-field>\n    </div>\n    <div layout=\"row\" flex>\n        <mat-form-field flex>\n          <input matInput placeholder=\"Phone Number\" ngModel name=\"phoneNumber\" required>\n        </mat-form-field>\n    </div>\n    <div layout-xs=\"row\" flex>\n        <div layout=\"column\" flex>\n          <mat-checkbox name=\"acceptedTerms\" ngModel required>Accept Terms And conditions</mat-checkbox>\n        </div>\n    </div>\n    <div layout-xs=\"row\" flex>\n        <div layout=\"column\" flex>\n          <mat-checkbox name=\"acceptedCommercial\" ngModel required>I want to receive notifications</mat-checkbox>\n        </div>\n    </div>\n    <div layout=\"row\" flex>\n    </div>\n    <div layout=\"row\" flex>\n        <div layout=\"column\" flex=\"10\">\n          </div>\n        <div layout=\"column\" flex>\n            <button mat-raised-button type=\"submit\" [disabled]=\"!registerForm.form.valid\">Register</button>\n        </div>\n        <div layout=\"column\" flex=\"10\">\n        </div>\n    </div>\n  </form>","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): boolean {\n    if (this.authService.isLogged() && this.authService.isPermited('VISITOR')) { // If its logged in and its role is visitor\n      return true;\n    }\n\n    if (!this.authService.isLogged()) { // if its not logged in\n      console.log('Error login');\n    }\n\n    if (this.router.url === '/') {  // if the router is the app route\n      this.router.navigate(['/login']);\n    }\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Visitor} from 'src/app/shared/backendModels/interfaces';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  private baseUrl = environment.baseUrlRestServices;\n\n  constructor(private http: HttpClient) { }\n\n  registerVisitor(visitor: Visitor): Observable<Visitor> {\n    return this.http.post<Visitor>(`${this.baseUrl}` + '/visitormanagement/v1/visitor', visitor);\n  }\n}","import { Injectable } from '@angular/core';\nimport { find } from 'lodash';\nimport { Role } from 'src/app/shared/backendModels/interfaces';\nimport { config } from 'src/app/config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private logged = false;\n  private user = '';\n  private userId = 0;\n  private currentRole = 'NONE';\n  private token!: string;\n\n  public isLogged(): boolean {\n    return this.logged;\n  }\n\n  public setLogged(login: boolean): void {\n    this.logged = login;\n  }\n\n  public getUser(): string {\n    return this.user;\n  }\n\n  public setUser(username: string): void {\n    this.user = username;\n  }\n\n  public getUserId(): number {\n    return this.userId;\n  }\n\n  public setUserId(userId: number): void {\n    this.userId = userId;\n  }\n\n  public getToken(): string {\n    return this.token;\n  }\n\n  public setToken(token: string): void {\n    this.token = token;\n  }\n\n  public setRole(role: string): void {\n    this.currentRole = role;\n  }\n\n  public getPermission(roleName: string): number {\n    const role: Role = <Role>find(config.roles, { name: roleName });\n    return role.permission;\n  }\n\n  public isPermited(userRole: string): boolean {\n    return (\n      this.getPermission(this.currentRole) === this.getPermission(userRole)\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment: {production: boolean, baseUrlRestServices: string} = {\n  production: false,\n  baseUrlRestServices: 'http://localhost:8081/jumpthequeue/services/rest'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class Visitor {\r\n    id!: number;\r\n    username!: string;\r\n    name!: string;\r\n    password!: string;\r\n    phoneNumber!: string;\r\n    acceptedCommercial!: boolean;\r\n    acceptedTerms!: boolean;\r\n    userType!: boolean;\r\n}\r\n\r\nexport class VisitorArray {\r\n    content!: Visitor[];\r\n}\r\n\r\nexport class FilterVisitor {\r\n    pageable!: Pageable;\r\n    username?: string;\r\n    password?: string;\r\n}\r\n\r\nexport class Pageable {\r\n    pageSize!: number;\r\n    pageNumber!: number;\r\n    sort!: Sort[];\r\n}\r\n\r\nexport class Sort {\r\n    property!: string;\r\n    direction!: string;\r\n}\r\n\r\nexport class Role {\r\n    name!: string;\r\n    permission!: number;\r\n}\r\n\r\nexport class FilterAccessCode {\r\n    pageable!: Pageable;\r\n    visitorId?: Number;\r\n    endTime!: string | null\r\n}\r\n\r\nexport class FilterQueue {\r\n    pageable!: Pageable;\r\n    active!: boolean;\r\n}\r\n\r\nexport class AccessCode {\r\n    id!: number;\r\n    ticketNumber!: string;\r\n    creationTime!: string;\r\n    startTime?: string;\r\n    endTime!: string | null\r\n    visitorId!: number;\r\n    queueId!: number;\r\n    content: any;\r\n}\r\n\r\nexport class Queue {\r\n    id!: number;\r\n    name!: string;\r\n    logo!: string;\r\n    currentNumber!: string;\r\n    attentionTime!: string;\r\n    minAttentionTime!: string;\r\n    active!: boolean;\r\n    customers!: number;\r\n    content: any;\r\n}\r\n\r\nexport class QueueArray {\r\n    content!: Queue[];\r\n}\r\n\r\nexport class AccessCodeArray {\r\n    content!: [{\r\n        accessCode: any\r\n    }];\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginService } from './services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private router: Router, private loginService: LoginService) { }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterClick(): void {\n    this.router.navigate(['Register']);\n  }\n\n  submitLogin(loginFormValues: { username: string; password: string; }): void {\n    this.loginService.login(loginFormValues.username, loginFormValues.password);\n  }\n\n}\n","<form (ngSubmit)=\"submitLogin(loginForm.form.value)\" #loginForm=\"ngForm\" layout-padding>\n    <div layout=\"row\" flex>\n        <mat-form-field flex>\n                <input matInput placeholder=\"Email\" ngModel email name=\"username\" required>\n        </mat-form-field>\n    </div>\n    <div layout=\"row\" flex>\n        <mat-form-field flex>\n            <input matInput placeholder=\"Password\" ngModel name=\"password\" type=\"password\" required>\n        </mat-form-field>\n    </div>\n    <div layout=\"row\" flex>\n    </div>\n    <div layout=\"row\" flex layout-margin>\n        <div layout=\"column\" flex>\n            <button mat-raised-button type=\"submit\" [disabled]=\"!loginForm.form.valid\">Login</button>\n        </div>\n        <div layout=\"column\" flex>\n            <button mat-raised-button (click)=\"onRegisterClick()\" color=\"primary\">Register</button>\n        </div>\n    </div>\n</form>","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CoreModule } from 'src/app/shared/core.module';\r\nimport { LoginComponent } from './login.component';\r\nimport { LoginService } from './services/login.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, CoreModule],\r\n  providers: [LoginService],\r\n  declarations: [LoginComponent],\r\n  exports: [LoginComponent],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\r\n})\r\nexport class LoginModule {}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular';\n}\n","<td-layout-nav>             <!-- Layout tag-->\n  <div td-toolbar-content flex>\n    <app-header layout-align=\"center center\" layout=\"row\" flex></app-header>\n  </div> \n  <router-outlet></router-outlet>>\n</td-layout-nav>","export const config: any = {\r\n    roles: [\r\n        { name: 'VISITOR', permission: 0 },\r\n        { name: 'BOSS', permission: 1 },\r\n    ],\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Queue, FilterQueue, Pageable, QueueArray } from 'src/app/shared/backendModels/interfaces';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueueService {\n\n  private baseUrl = environment.baseUrlRestServices;\n\n  constructor(private router: Router, private http: HttpClient) { }\n\n  getActiveQueue(): Observable<Queue> {\n    const filters: FilterQueue = new FilterQueue();\n    filters.active = true;\n    const pageable: Pageable = new Pageable();\n    pageable.pageNumber = 0;\n    pageable.pageSize = 1;\n    pageable.sort = [];\n    filters.pageable = pageable;\n    return this.http.post<QueueArray>(`${this.baseUrl}` + '/queuemanagement/v1/queue/search', filters)\n    .pipe(\n         map(queues => queues.content[0]),\n     );\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n// Application components and services\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './shared/core.module';\nimport { FormLoginComponent } from './form-login/form-login.component';\nimport { LoginComponent } from './form-login/components/login/login.component';\nimport { FormLoginModule } from './form-login/form-login-module';\nimport { RegisterComponent } from './register/register.component';\nimport { HeaderComponent } from './layout/header/header.component';\nimport { ViewQueueComponent } from './view-queue/view-queue.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    HeaderComponent,\n    ViewQueueComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormLoginModule,\n    AppRoutingModule,\n    CoreModule,\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class AppModule { }","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormLoginComponent } from './form-login.component';\r\nimport { CoreModule } from '../shared/core.module';\r\nimport { LoginModule } from './components/login/login-module';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, CoreModule, LoginModule],\r\n  providers: [],\r\n  declarations: [FormLoginComponent],\r\n  exports: [FormLoginComponent],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\r\n})\r\nexport class FormLoginModule {}","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CovalentChipsModule } from '@covalent/core/chips';\r\nimport { CovalentLayoutModule } from '@covalent/core/layout';\r\nimport { CovalentExpansionPanelModule } from '@covalent/core/expansion-panel';\r\nimport { CovalentDataTableModule } from '@covalent/core/data-table';\r\nimport { CovalentPagingModule } from '@covalent/core/paging';\r\nimport { CovalentDialogsModule } from '@covalent/core/dialogs';\r\nimport { CovalentLoadingModule } from '@covalent/core/loading';\r\nimport { CovalentMediaModule } from '@covalent/core/media';\r\nimport { CovalentNotificationsModule } from '@covalent/core/notifications';\r\nimport { CovalentCommonModule } from '@covalent/core/common';\r\nimport { AuthGuardService } from '../core/authentication/auth-guard.service';\r\nimport { AuthService } from '../core/authentication/auth.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    CovalentMediaModule,\r\n    CovalentLayoutModule,\r\n    CdkTableModule,\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    CovalentChipsModule,\r\n    CovalentLayoutModule,\r\n    CovalentExpansionPanelModule,\r\n    CovalentDataTableModule,\r\n    CovalentPagingModule,\r\n    CovalentDialogsModule,\r\n    CovalentLoadingModule,\r\n    CovalentMediaModule,\r\n    CovalentNotificationsModule,\r\n    CovalentCommonModule,\r\n    CdkTableModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    HttpClientModule,\r\n  ],\r\n  declarations: [],\r\n  providers: [\r\n    HttpClientModule,\r\n    AuthService,\r\n    AuthGuardService,\r\n  ],\r\n})\r\nexport class CoreModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AccessCode, Queue } from '../shared/backendModels/interfaces';\nimport { Observable, timer } from 'rxjs';\nimport { AccessCodeService } from './services/access-code.service';\nimport { switchMap } from 'rxjs/operators';\nimport { AuthService } from '../core/authentication/auth.service';\nimport { QueueService } from './services/queue.service';\n\n@Component({\n  selector: 'app-view-queue',\n  templateUrl: './view-queue.component.html',\n  styleUrls: ['./view-queue.component.scss']\n})\nexport class ViewQueueComponent implements OnInit {\n\n  accessCodeAttended$!: Observable<AccessCode>;\n  accessCodeVisitor$!: Observable<AccessCode> | null;\n  queue$!: Observable<Queue>;\n\n  constructor(private accessCodeService: AccessCodeService, private queueService: QueueService, private authService: AuthService) { }\n\n  ngOnInit() {\n     // Every minute we are going to update accessCodeAttended$ starting instantly\n    this.accessCodeAttended$ = timer(0, 60000).pipe(\n      // we switchMap and give it the value necesary from the accessCodeService\n      switchMap(() => {\n        return this.accessCodeService.getCurrentlyAttendedAccessCode();\n      })\n    );\n    this.accessCodeVisitor$ = this.accessCodeService.getVisitorAccessCode(this.authService.getUserId());\n    this.queue$ = this.queueService.getActiveQueue();\n  }\n\n  onJoinQueue(queueId: number): void {\n    this.accessCodeVisitor$ = this.accessCodeService.saveAccessCode(this.authService.getUserId(), queueId);\n  }\n\n  onLeaveQueue(accessCodeId: number): void {\n    this.accessCodeService.deleteAccessCode(accessCodeId);\n    this.accessCodeVisitor$ = null;\n  }\n}\n","<td-layout *ngIf=\"{\n    accessCodeAttended: accessCodeAttended$! | async,\n    accessCodeVisitor: accessCodeVisitor$!  | async,\n    queue: queue$! | async\n  } as data;\">\n    <div *ngIf=\"data.queue\">\n      <mat-card>\n      <img mat-card-image src=\"assets/images/jumptheq.png\">\n  \n        <div *ngIf=\"data.accessCodeVisitor\">\n          <div class=\"text-center row\">\n            <h1 style=\"margin-bottom:10px;\" class=\"text-left text-xl push-md\">Your Number:</h1>\n          </div>\n          <div class=\"text-center row\">\n            <h1 style=\"font-size: 75px; margin:0px;\" class=\"text-center text-xxl push-left-md\">{{data.accessCodeVisitor.ticketNumber}}</h1>\n          </div>\n          <div style=\"border-bottom: 2px solid black;\" class=\"row\">\n            <p class=\"push-left-md\">Currently estimate time: 10:00:00</p>\n          </div>\n        </div>\n        <div class=\"text-center\">\n          <div class=\"text-center row\">\n            <h1 style=\"margin-bottom:10px;\" class=\"text-left text-xl push-md\">Currently Being Attended:</h1>\n          </div>\n          <div class=\"row\">\n            <h1 style=\"font-size: 100px\" class=\"text-center text-xxl push-lg\">{{data.accessCodeAttended?.ticketNumber}}</h1>\n          </div>\n        </div>\n        <div style=\"border-top: 2px solid black;\" class=\"pad-bottom-lg pad-top-lg text-center row\" *ngIf=\"data.accessCodeVisitor === null\">\n          <button mat-raised-button (click)=\"onJoinQueue(data.queue.id)\" color=\"primary\" class=\"text-upper\">Join the queue</button>\n        </div>\n      </mat-card>\n      <div *ngIf=\"data.accessCodeVisitor\" style=\"margin: 8px;\" class=\"row text-right\">\n          <button mat-raised-button (click)=\"onLeaveQueue(data.accessCodeVisitor.id)\" color=\"primary\" class=\"text-upper\">Leave the queue</button>\n      </div>\n    </div>\n    <div *ngIf=\"data.queue === null || (data.queue !== null && data.queue.active === false)\" class=\"row\">\n      <h1 style=\"font-size: 50px\" class=\"text-center text-xxl push-lg\">The queue is not active try again later</h1>\n    </div>\n  </td-layout>","import { Injectable } from '@angular/core';\nimport { AuthService } from 'src/app/core/authentication/auth.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { AccessCode, Pageable, FilterAccessCode, AccessCodeArray } from 'src/app/shared/backendModels/interfaces';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccessCodeService {\n\n  private baseUrl = environment.baseUrlRestServices;\n\n  constructor(private router: Router, private http: HttpClient, private authService: AuthService) { }\n\n  getCurrentlyAttendedAccessCode(): Observable<AccessCode> {\n    const filters: FilterAccessCode = new FilterAccessCode();\n    const pageable: Pageable = new Pageable();\n\n    filters.endTime = null;\n    pageable.pageNumber = 0;\n    pageable.pageSize = 1;\n    filters.pageable = pageable;\n    return this.http.post<AccessCodeArray>(`${this.baseUrl}` + '/accesscodemanagement/v1/accesscode/cto/search', filters)\n    .pipe(\n        map(accesscodes => {\n          if (!accesscodes.content[0]) {  // if theres no response it means theres noone in the queue\n            return null;\n          } else {\n            if (accesscodes.content[0].accessCode.startTime != null) {\n              // if start time is not null it means that hes being attended\n              return accesscodes.content[0].accessCode;\n            } else {\n              // noone being attended\n              return null;\n            }\n          }\n        }),\n     );\n  }\n\n  getVisitorAccessCode(visitorId: number): Observable<AccessCode> {\n    const filters: FilterAccessCode = new FilterAccessCode();\n    const pageable: Pageable = new Pageable();\n\n    pageable.pageNumber = 0;\n    pageable.pageSize = 1;\n    filters.visitorId = visitorId;\n    filters.pageable = pageable;\n    return this.http.post<AccessCodeArray>(`${this.baseUrl}` + '/accesscodemanagement/v1/accesscode/cto/search', filters)\n    .pipe(\n      map(accesscodes => {\n        if (accesscodes.content[0]) {\n          return accesscodes.content[0].accessCode;\n        } else {\n          return null;\n        }\n      }),\n    );\n  }\n\n  deleteAccessCode(codeAccessId: number) {\n    this.http.delete<AccessCode>(`${this.baseUrl}` + '/accesscodemanagement/v1/accesscode/' + codeAccessId + '/').subscribe();\n  }\n\n  saveAccessCode(visitorId: number, queueId: number) {\n    const accessCode: AccessCode = new AccessCode();\n    accessCode.visitorId = visitorId;\n    accessCode.queueId = queueId;\n    return this.http.post<AccessCode>(`${this.baseUrl}` + '/accesscodemanagement/v1/accesscode/', accessCode);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-form-login',\n  templateUrl: './form-login.component.html',\n  styleUrls: ['./form-login.component.scss']\n})\nexport class FormLoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<td-layout>\n    <mat-card>\n      <img mat-card-image src=\"assets/images/jumptheq.png\">\n      <app-login></app-login>\n    </mat-card>\n  </td-layout>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormLoginComponent } from './form-login/form-login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ViewQueueComponent } from './view-queue/view-queue.component';\nimport { AuthGuardService } from './core/authentication/auth-guard.service';\n\nconst appRoutes: Routes = [\n  { path: 'FormLogin', component: FormLoginComponent},          // Redirect if url path is /FormLogin.\n  { path: 'Register', component: RegisterComponent},            // Redirect if url path is /Register.\n  { path: '**', redirectTo: '/FormLogin', pathMatch: 'full' },\n  { path: 'ViewQueue', component: ViewQueueComponent, canActivate: [AuthGuardService]},   // Redirect if url path do not match any other route.\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: true }, // <-- debugging purposes only\n    ),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { map, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Visitor, FilterVisitor, Pageable, VisitorArray } from 'src/app/shared/backendModels/interfaces';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/core/authentication/auth.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n    private baseUrl = environment.baseUrlRestServices;\n    constructor(private router: Router, private http: HttpClient, private authService: AuthService, public snackBar: MatSnackBar) { }\n\n    getVisitorByUsername(username: string): Observable<Visitor> {\n        const filters: FilterVisitor = new FilterVisitor();\n        const pageable: Pageable = new Pageable();\n\n        pageable.pageNumber = 0;\n        pageable.pageSize = 1;\n        pageable.sort= [];\n        filters.username = username;\n        filters.pageable = pageable;\n        return this.http.post<VisitorArray>(`${this.baseUrl}` + '/visitormanagement/v1/visitor/search', filters)\n       .pipe(\n            map((visitors: { content: any[]; }) => visitors.content[0]),\n        );\n    }\n\n    login(username: string, password: string): void {\n      // Checks if given username and password are the ones aved in the database\n      this.getVisitorByUsername(username).subscribe(\n          (visitorFound) => {\n              if (visitorFound.username === username && visitorFound.password === password) {\n                  this.authService.setUserId(visitorFound.id);\n                  this.authService.setLogged(true);\n                  this.authService.setUser(visitorFound.username);\n                  if (visitorFound.userType === false) {\n                      this.authService.setRole('VISITOR');\n                      this.router.navigate(['ViewQueue']);\n                  } else {\n                      this.authService.setLogged(false);\n                      this.snackBar.open('access error', 'OK', {\n                          duration: 2000,\n                        });\n                  }\n              } else {\n                  this.snackBar.open('access error', 'OK', {\n                      duration: 2000,\n                    });\n              }\n          },\n          (err: any) => {\n            this.snackBar.open('access error', 'OK', {\n              duration: 2000,\n            });\n          },\n      );\n    }\n\n    logout(): void {\n        this.authService.setLogged(false);\n        this.authService.setUser('');\n        this.authService.setUserId(0);\n        this.router.navigate(['FormLogin']);\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}