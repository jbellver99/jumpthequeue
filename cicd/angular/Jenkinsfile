pipeline {
    agent any
    
    tools {
        nodejs "nodejs"
        maven "maven"
    }

    options{
        disableConcurrentBuilds()
    }

    environment {

        angularDir = 'angular'

        srcDir = 'angular/src'

        sonarTool = 'SonarScanner'

        sonarEnv = "SonarQube"

        groupId = 'com.devonfw.jtqj'

        repositoryId = 'Jump-The-Queue'

        nexusUrl = 'http://nexus:8085'
        
        dockerRegistryCredentials = 'nexus'
        
        dockerTool = 'docker'
    }

    stages {
        stage ('Install Application') {
            steps {
                dir(angularDir) {
                    sh """npm install"""
                }
            }
        }

        stage ('SonarQube Code Analysis') {
            steps {
                script {
                    def scannerHome = tool sonarTool
                    withSonarQubeEnv(sonarEnv) {
                        sh """${scannerHome}/bin/sonar-scanner \
                            -Dsonar.projectKey=angular \
                            -Dsonar.sources=${srcDir}
                        """
                    }
                }
            }
        }

        stage ('Build Application') {
            steps {
                dir(angularDir) {
                    sh """npm run build"""
                }
            }
        }

        stage ('Create The Docker Image & Upload To Nexus') {
            steps {
                script {
                    dir(angularDir) {
                        tool dockerTool
                        docker.withRegistry(nexusUrl, dockerRegistryCredentials) {
                            docker images
                        }
                    }
                }
            }
        }
    }
}
