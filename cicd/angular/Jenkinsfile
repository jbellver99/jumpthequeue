pipeline {
    agent any
    
    tools {
        nodejs "nodejs"
    }

    options{
        disableConcurrentBuilds()
    }

    environment {
        buildScript = 'build --configuration=docker'

        angularDir = 'angular'

        srcDir = 'src'

        sonarTool = 'SonarScanner' type:'hudson.plugins.sonar.SonarRunnerInstallation'

        sonarEnv = "SonarQube"

        dockerTool = 'docker-global'
    }

    stages {
        stage ('Install Application') {
            steps {
                dir(angularDir) {
                    sh """npm install"""
                }
            }
        }

        stage ('SonarQube Code Analysis') {
            steps {
                script {
                    def scannerHome = tool sonarTool
                    def props = readJSON file: 'package.json'
                    withSonarQubeEnv(sonarEnv) {
                        sh """${scannerHome}/bin/sonar_scanner"""
                    }
                }
            }
        }

        stage ('Build Application') {
            steps {
                dir(angularDir) {
                    sh """npm run build"""
                }
            }
        }

        stage ('Create The Docker Image') {
            steps {
                dir(angularDir) {
                    sh """docker build -t jump-the-queue/angular ."""
                }
            }
        }
    }
}
